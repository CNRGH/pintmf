% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getHgroup.R
\name{get.H.group}
\alias{get.H.group}
\title{get.H.group solve equation for H}
\usage{
get.H.group(W, y, t, groups)
}
\arguments{
\item{W}{weight matrix}

\item{y}{observations}

\item{type}{type of data (by default all are "none"),
can take values into \code{ c("none", "methylation", "mutation")},
this argument allows to adapt modelisation by adding constraints.
For exemple methylation data takes values between 0 and 1, then H block corresponding to
methylation data takes values between 0 and 1.}

\item{group}{a vector of the same length of y}
}
\description{
Get.H.group
}
\examples{
library(tidyverse)
p <- 5
n <- 10
W <- buildWeightMatrix(n,p)
n.vars <- 100
H <- rbind(c(runif(15,  0, 5), rep(0, n.vars - 15)),
           c(rep(0, n.vars - 25), runif(10, 0, 5), rep(0, n.vars - 85)),
           c(rep(0, n.vars - 50), runif(20,  -5, 0), rep(0, n.vars - 70)),
           c(rep(0, n.vars - 40), runif(15,  -5, 0), rep(0, n.vars - 75)),
           c(rep(0, n.vars - 70), runif(20, 0, 5), rep(0, n.vars - 50)))  \%>\%
           round(2)
groups = c(rep(1, 15), rep(2, 15), rep(3, 20), rep(4, 10), rep(5, 10), rep(6,5), rep(7,10), rep(8, 15))
y <- as.matrix(W\%*\%H + rnorm(20, sd=0.0))
test <- get.H.group(W, y=y, t="none", groups=groups)
tpr <- length(intersect(which(as.matrix(H)!=0),which(test!=0)))/sum(H!=0)
tpr
fpr <- length(intersect(which(as.matrix(H)==0),which(test!=0)))/sum(H==0)
fpr
}
